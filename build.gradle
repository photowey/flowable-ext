/*
 * Copyright Â© 2020 photowey (photowey@gmail.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// ================================================================= PLUGINS
buildscript {
    ext {
        SPRING_BOOT_VERSION = "2.4.1"
    }
    repositories {
        mavenLocal()
        maven {
            name "aliyun";
            url "https://maven.aliyun.com/repository/public"
        }
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${SPRING_BOOT_VERSION}")
    }
}

plugins {
    id "org.springframework.boot" version "2.4.1"
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

// ================================================================= SUB_PROJECT

subprojects {
    apply plugin: 'java'
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"

    dependencyManagement {
        imports {
            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
        }
    }

    dependencies {
        // Test
        testCompile "org.springframework.boot:spring-boot-starter-test"
    }

    test {
        useJUnitPlatform()
    }
}

// ================================================================= GROUP

group = 'com.photowey'
version = '1.0.0-SNAPSHOT'

// ================================================================= DESCRIPTION

description = "flowable-ext"
defaultTasks 'build'

// ================================================================= PACKAGE_SOURCES

task packageSources(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

// ================================================================= ALL_PROJECTS

allprojects {
    // Publish
    apply plugin: 'maven-publish'
    // Apply declare versions.
    apply from: "${project.rootDir}/versions.gradle"

    group 'com.photowey'
    version '1.0.0-SNAPSHOT'

    java {
        sourceCompatibility = JavaVersion.VERSION_1_8
    }

    jar {
        // For multi module.
        enabled(true)
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }

        repositories {
            mavenLocal()
        }
    }

    artifacts {
        archives packageSources
    }

    uploadArchives {
        repositories {
            mavenLocal()
        }
    }

    repositories {
        mavenLocal()
        maven {
            name "aliyun";
            url "https://maven.aliyun.com/repository/public"
        }
        mavenCentral()
    }

    buildscript {
        repositories {
            mavenLocal()
            maven {
                name "aliyun";
                url 'https://maven.aliyun.com/repository/public'
            }
            mavenCentral()
        }
    }

    springBoot {
        buildInfo()
    }

    tasks.withType(AbstractCompile).each { it.options.encoding = "${DEFAULT_ENCODING}" }

    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', "${DEFAULT_ENCODING}")
        options.addStringOption('charSet', "${DEFAULT_ENCODING}")
    }

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, "minutes"
    }
}

/**
 * $ gradle -q springBootVersion
 *
 * > the project:[flowable-ext] spring-boot version:[2.4.1]
 * @since 1.0.0
 */
task springBootVersion {
    println("the project:[${project.name}], spring-boot version:[${SPRING_BOOT_VERSION}], encoding:[${DEFAULT_ENCODING}]")
}

// ================================================================= END
